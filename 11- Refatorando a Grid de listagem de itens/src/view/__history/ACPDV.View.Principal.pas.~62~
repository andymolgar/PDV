unit ACPDV.View.Principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Buttons, Data.DB,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Imaging.jpeg,
  ACPDV.View.Page.Login,
  ACPDV.Model.Dados,
  Vcl.WinXCtrls,
  ACPDV.View.Page.Identificar.Cliente,
  ACPDV.View.Page.Importar.Cliente,
  ACPDV.View.Page.Abrir.Caixa,
  Vcl.Imaging.pngimage,
  ACPDV.Model.Caixa,
  ACPDV.View.Page.Fechamento.Caixa,
  ACPDV.View.Page.Pagamento, ACPDV.View.Page.Login.Supervisor;

type
  TpagePrincipal = class(TForm)
    pnlContainer: TPanel;
    pnlTitle: TPanel;
    pnlButton: TPanel;
    pnlMain: TPanel;
    pnlOperacoes: TPanel;
    pnlGrid: TPanel;
    pnlCancelarOperacao: TPanel;
    shpCancelarOperacao: TShape;
    btnCancelarOperacao: TSpeedButton;
    pnlConsultarPreco: TPanel;
    shpConsultarPreco: TShape;
    btnConsultarPreco: TSpeedButton;
    pnlAbrirCaixa: TPanel;
    shpAbrirCaixa: TShape;
    btnAbrirCaixa: TSpeedButton;
    pnlCancelarVenda: TPanel;
    shpCancelarVenda: TShape;
    btnCancelarVenda: TSpeedButton;
    pnlCancelarItem: TPanel;
    shpCancelarItem: TShape;
    btnCancelarItem: TSpeedButton;
    pnlMaisFuncoes: TPanel;
    shpMaisFuncoes: TShape;
    btnMaisFuncoes: TSpeedButton;
    pnlTotalCompra: TPanel;
    lblTitleTotalCompra: TLabel;
    shpTotalCompra: TShape;
    pnlEdtTotalCompra: TPanel;
    lblTotalCompra: TLabel;
    pnlSubTotal: TPanel;
    lblTitleSubTotal: TLabel;
    pnlEdtSubTotal: TPanel;
    shpSubTotal: TShape;
    lblSubTotal: TLabel;
    pnlQuantidade: TPanel;
    lblTitleQuantidade: TLabel;
    pnlEdtQuantidade: TPanel;
    shpQuantidade: TShape;
    edtQuantidade: TEdit;
    pnlPreco: TPanel;
    lblTitlePreco: TLabel;
    pnlEdtPreco: TPanel;
    shpPreco: TShape;
    lblPreco: TLabel;
    pnlProduto: TPanel;
    lblTitleProduto: TLabel;
    pnlEdtProduto: TPanel;
    shpProduto: TShape;
    edtProduto: TEdit;
    pnlImageProduct: TPanel;
    imgProduto: TImage;
    pnlMaster: TPanel;
    dsItens: TDataSource;
    splitViewFuncoes: TSplitView;
    pnl1: TPanel;
    pnlInformarCpf: TPanel;
    shpLineInformarCpf: TShape;
    pnlNovaVenda: TPanel;
    shpLineNovaVenda: TShape;
    pnlFecharVenda: TPanel;
    shpLineFecharVenda: TShape;
    pnlMultiplicar: TPanel;
    shpLineMultiplicar: TShape;
    pnlDescontoItem: TPanel;
    shpLineDescontoItem: TShape;
    pnlSuprimentoSangria: TPanel;
    shpLineSuprimentoSangria: TShape;
    splitViewPagamentos: TSplitView;
    pnlPag: TPanel;
    pnlImportarCliente: TPanel;
    shpLineInformarCliente: TShape;
    pnlIdentificaCliente: TPanel;
    pnlTitulo: TPanel;
    pnlTitituloItem: TPanel;
    pnlTitituloCodigo: TPanel;
    pnlTituloSubTotal: TPanel;
    pnlTituloQuantidade: TPanel;
    pnlTituloValorUnitario: TPanel;
    pnlTituloDescricao: TPanel;
    pnlListaItens: TPanel;
    shpLineListaItens: TShape;
    listBoxItens: TListBox;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure btnCancelarOperacaoClick(Sender: TObject);
    procedure btnConsultarPrecoClick(Sender: TObject);
    procedure btnAbrirCaixaClick(Sender: TObject);
    procedure btnCancelarVendaClick(Sender: TObject);
    procedure btnCancelarItemClick(Sender: TObject);
    procedure btnMaisFuncoesClick(Sender: TObject);
    procedure edtProdutoKeyPress(Sender: TObject; var Key: Char);
  private
    FLogin : TPageLogin;
    FF6 : Integer;
    FCaixa : TCaixa;
    procedure PreencherCaptionBotoes;
    procedure FixarForm;
    procedure SplitViewAction(Value : TSplitView);
    procedure AjustarCampos;
    procedure VerificaCaixaFechadoAberto;
    procedure InformacoesOperador;

  public
    { Public declarations }
  end;

var
  pagePrincipal: TpagePrincipal;

implementation


{$R *.dfm}

procedure TpagePrincipal.AjustarCampos;
begin
	edtProduto.Text := EmptyStr;
  lblPreco.Caption := FormatCurr('"R$ ",0.00',0);
  edtQuantidade.Text := FormatFloat(',0.000',0);
  lblSubTotal.Caption := FormatCurr('"R$ ",0.00',0);
  lblTotalCompra.Caption := FormatCurr('"R$ ",0.00',0);

  dmDados.cdsItens.Active := False;
	pnlTitle.SetFocus;
end;

procedure TpagePrincipal.btnAbrirCaixaClick(Sender: TObject);
begin
  ShowMessage('Abrir Caixa');
end;

procedure TpagePrincipal.btnCancelarItemClick(Sender: TObject);
begin
  ShowMessage('Cancelar Item');
end;

procedure TpagePrincipal.btnCancelarOperacaoClick(Sender: TObject);
begin
  ShowMessage('Cancelar Operação');
end;

procedure TpagePrincipal.btnCancelarVendaClick(Sender: TObject);
begin
  ShowMessage('Cancelar Venda');
end;

procedure TpagePrincipal.btnConsultarPrecoClick(Sender: TObject);
begin
  ShowMessage('Consultar Preço');
end;

procedure TpagePrincipal.btnMaisFuncoesClick(Sender: TObject);
begin
  SplitViewAction(splitViewFuncoes);
end;

procedure TpagePrincipal.edtProdutoKeyPress(Sender: TObject; var Key: Char);
begin
  if not FCaixa.Aberto then
  begin
    Key := #0;
    edtProduto.Clear;
    Application.MessageBox('O caixa deve estar aberto!','Informação', 64 + 0);
    Exit;
  end;

  case Key of
    '.' , ',' :
    begin
      Key := ',';
      if Pos(',', edtProduto.Text) > 0 then
        Key := #0;
    end;

    '*':
    begin
      if Pos('*', edtProduto.Text) > 0 then
        Key := #0;
    end;

    '/' :
    begin
      Application.MessageBox('Nenhuma balança configurada!','Balança', 64 + 0);
    end;


  end;
end;

procedure TpagePrincipal.FixarForm;
begin
  Self.WindowState := wsNormal;
  Self.Position    := poScreenCenter;
  Self.Constraints.MaxHeight := Self.ClientHeight;
  Self.Constraints.MinHeight := Self.ClientHeight;
  Self.Constraints.MaxWidth  := Self.ClientWidth;
  Self.Constraints.MinWidth  := Self.ClientWidth;
end;

procedure TpagePrincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  FCaixa.DisposeOf;
end;

procedure TpagePrincipal.FormCreate(Sender: TObject);
begin
  FixarForm;
  PreencherCaptionBotoes;
end;

procedure TpagePrincipal.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  lKeyEvent   : TKeyEvent;
  I: Integer;
begin

  for I := Pred(pnlMaster.ControlCount) downto 0 do
  begin
    if ( (pnlMaster.Controls[i] is TForm) and (TForm(pnlMaster.Controls[I]).ModalResult = mrOk) ) then
    begin

        if ( (TForm(pnlMaster.Controls[i]).KeyPreview) and (Assigned(lKeyEvent)) ) then
        begin
          lKeyEvent := TForm(pnlMaster.Controls[i]).OnKeyDown;
          lKeyEvent(Sender, Key, Shift);
        end;


        Exit;
    end;
  end;


  case Key of
    VK_ESCAPE :
    	 Self.Close;

    VK_F2:
    begin
      if not FCaixa.Aberto then
      begin
        TpageAbrirCaixa.New(Self)
        .Embed(pnlMaster)
        .Informacoes(
        	procedure(Value : TCaixa)
          begin
          	FCaixa.Id := Value.Id;
            FCaixa.Caixa := Value.Caixa;
            FCaixa.Turno := Value.Turno;
            FCaixa.Aberto := Value.Aberto;
            FCaixa.DataHoraAbertura := Value.DataHoraAbertura;
            FCaixa.SaldoInicial := Value.SaldoInicial;

            VerificaCaixaFechadoAberto;
          end
        );
      end;



    end;

    VK_F4:
    begin
      TpageFechamentoCaixa.New(Self)
        .Embed(pnlMaster)
        .Alinhamento(alClient)
        .Informacoes (
          procedure(Value : TCaixa)
          begin
            FCaixa.Aberto := Value.Aberto;
            FCaixa.DataHoraFechamento := Value.DataHoraFechamento;
            VerificaCaixaFechadoAberto;
          end
        );

    end;




    VK_F5     : ShowMessage('Cancelar Item');
    VK_F6     : ShowMessage('Cancelar Venda');



    VK_F7:
    begin
      TpagePagamento
        .New(Self)
        .Embed(pnlMaster);
    end;


    VK_F9:
    begin
      TpageIdentificarCliente.New(Self)
        .IdentificarCPF
        .Embed(pnlMaster)
        .IdentificaCliente ( procedure ( aCPF, aCliente : string )
        begin
          if not aCliente.IsEmpty then
            aCliente := 'Cliente: ' + aCliente;

          if not aCPF.IsEmpty then
            aCPF := 'CPF: ' + aCPF;

          if ( (not aCliente.IsEmpty) or (not aCPF.IsEmpty) ) then
          begin
            pnlIdentificaCliente.Visible := True;
            pnlIdentificaCliente.Caption := aCliente + ' ' + aCPF;

          end;

        end );

    end;

    VK_F11 :
    begin
      TpagePermissaoSupervisor
        .New(Self)
        .Alinhamento(alClient)
        .Embed(pnlMaster);
    end;


    VK_F12    : btnMaisFuncoesClick(Sender);


    VK_F1:
    begin
      TpageImportarCliente.New(Self)
        .Embed(pnlMaster)
        .Alinhamento(alClient);
    end;

  end;
end;

procedure TpagePrincipal.FormShow(Sender: TObject);
begin
	TpageLogin.New(Self)
  	.Embed(pnlMaster)
    .Alinhamento(alClient)
    .Informacao(
    	procedure(Value : string)
      begin
        if not Assigned(FCaixa) then
        	FCaixa := TCaixa.New;

        FCaixa.Operador := Value;

        VerificaCaixaFechadoAberto;

      end );

end;

procedure TpagePrincipal.InformacoesOperador;
var
	lCaption, lOperador : string;
begin
	lOperador := 'Caixa ' + FCaixa.Caixa.ToString +
               ' | Operador: ' + FCaixa.Operador +
               ' | Turno : ' + FCaixa.Turno.ToString;


	lCaption := StringOfChar(' ', (255 - (Length(Self.Caption) + Length(lOperador))));

  Self.Caption := Self.Caption + lCaption + lOperador;
end;

procedure TpagePrincipal.PreencherCaptionBotoes;
begin
  btnCancelarOperacao.Caption := 'Cancelar Operação' + sLineBreak + '(F10)';
  btnConsultarPreco.Caption   := 'Fechar Caixa' + sLineBreak + '(F4)';
  btnAbrirCaixa.Caption       := 'Abrir Caixa' + sLineBreak + '(F2)';
  btnCancelarVenda.Caption    := 'Cancelar Venda' + sLineBreak + '(F6)';
  btnCancelarItem.Caption     := 'Cancelar Item' + sLineBreak + '(F5)';
  btnMaisFuncoes.Caption      := 'Mais Funções' + sLineBreak + '(F12)';
end;

procedure TpagePrincipal.SplitViewAction(Value: TSplitView);
begin
  Value.Opened := not Value.Opened;
end;

procedure TpagePrincipal.VerificaCaixaFechadoAberto;
begin
	if not (FCaixa.Aberto) then
  begin
    pnlTitle.Caption := 'Caixa Fechado';
    AjustarCampos;
    Exit;
  end;

  pnlTitle.Caption := 'Caixa Aberto';
  InformacoesOperador;
  AjustarCampos;
end;

end.
